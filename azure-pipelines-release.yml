# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
name: morale-assistant-backend-release

# Only build if changes are pushed to master
trigger:
- master
# Don't build on pull requests
pr: none

variables:
 - group: maven-repository-access
 - group: github-access

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
    sshPublicKey: $(github.ssh.publicKey)
    sshPassphrase: $(github.ssh.passphrase)
    sshKeySecureFile: 'github-key'
- task: CmdLine@2
  displayName: Set remote URL with authentication
  inputs:
    script: 'git config remote.origin.url "git@github.com/$(github.username)/morale-assistant-backend.git"'
- task: CmdLine@2
  displayName: Checkout $(Build.SourceBranchName)
  inputs:
    script: 'git checkout $(Build.SourceBranchName)'
- task: Gradle@2
  inputs:
    workingDirectory: 'morale-assistant-backend-kt'
    gradleWrapperFile: 'morale-assistant-backend-kt/gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'release -PazureDevOpsRepoUrl=$(azureDevOpsRepoUrl) -PazureDevOpsUsername=$(azureDevOpsUsername) -PazureDevOpsPassword=$(azureDevOpsPassword)'
